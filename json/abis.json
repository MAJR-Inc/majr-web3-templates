{
  "factory": [
    "function createMembershipContract(address _creator, string calldata _name, uint256 _price) external",
    "function getMembershipContractsOfCreator(address _creator) external view returns (uint256, address[] memory)",
    "function getAllCreatorMembershipContracts() external view returns (uint256, address[] memory)",
    "function setDefaultBaseURI(string calldata _defaultBaseURI) external",
    "function setMAJR(address _MAJR) external",
    "function defaultBaseURI() external view returns (string memory)",
    "function MAJR() external view returns (address)"
  ],
  "membershipNft": [
    "function pause() external",
    "function unpause() external",
    "function paused() external view returns (bool)",
    "function setPrice(uint256 _price) external",
    "function setBaseURI(string calldata _baseURI) external",
    "function setMAJR(address _MAJR) external",
    "function MAJR() external view returns (address)",
    "function mint(address to, uint256 quantity) external",
    "function mintWithReferrer(address to, uint256 quantity, address referrer) external",
    "function burn(uint256 _tokenId) external",
    "function exists(uint256 _tokenId) external view returns (bool)",
    "function tokenURI(uint256 tokenId) external view returns (string memory)",
    "function baseURI() external view returns (string memory)",
    "function contractURI() external view returns (string memory)",
    "function name() external view returns (string memory)",
    "function symbol() external view returns (string memory)",
    "function price() external view returns (uint256)",
    "function totalSupply() external view returns (uint256)",
    "function balanceOf(address owner) external view returns (uint256)",
    "function ownerOf(uint256 tokenId) external view returns (address)",
    "function getApproved(uint256 tokenId) external view returns (address)",
    "function isApprovedForAll(address owner, address operator) external view returns (bool)",
    "function approve(address to, uint256 tokenId) external",
    "function setApprovalForAll(address operator, bool approved) external",
    "function transferFrom(address from, address to, uint256 tokenId) external",
    "function safeTransferFrom(address from, address to, uint256 tokenId) external",
    "function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata _data) external",
    "function supportsInterface(bytes4 interfaceId) external view returns (bool)",
    "function split() external",
    "function referralSplit(address referrer) external",
    "function getSplitAddressesAndAmounts() external view returns (address[] memory, uint256[] memory)",
    "function setSplit(address[] calldata _splitAddresses, uint256[] calldata _splitAmounts) external",
    "function getReferralAddressesAndAmounts() external view returns (address[] memory, uint256[] memory)",
    "function setReferral(address[] calldata _referralAddresses, uint256[] calldata _referralAmounts) external",
    "function owner() external view returns (address)",
    "function transferOwnership(address newOwner) external",
    "function renounceOwnership() external"
  ]
}
